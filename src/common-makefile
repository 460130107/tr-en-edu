TOK = $(shell find txt -type f | perl -pe 's/txt/tok/g')
ALN = $(shell find tok -type f)

# English-Tools
TOKENIZER_EN=../../src/moses-scripts/tokenizer.perl -l en
SENTENCESP_EN=../../src/moses-scripts/split-sentences.perl -l en
ALIGN_EN=""
# Turkish-Tools
SENTENCESP_TR=../../src/moses-scripts/split-sentences.perl -l tr
TOKENIZER_TR=../../src/moses-scripts/tokenizer.perl -l tr
# Aligner
ALIGN=../../src/hunalign-1.1/hunalign -text -bisent -realign -utf ../..//src/hunalign-1.1/data/en-tr.dic
ALIGNTHR=0

#Remove all repetition
RCOUNT=../src/rcount
MULTTHR=10
REMMULT=../src/remmult.pl

#filter
FILTER=../src/filter-and-split.py

#all: ${TOK}
#	echo ${TOK}

tok: ${TOK}
#	echo ${TOK}

%.txt.tgz: %.html.tgz
	tar xzf $<
	mkdir -p $*/txt 
	cd $*/html;make
	tar czf $@ $*/txt
	rm -rf $*

%.tok.tgz: %.txt.tgz
	tar xzf $< 
	cp Makefile $*
	cd $*;make tok
	tar czf $@ $*/tok
	rm -rf $*

tok/%.tok.en: txt/%.txt.en
	mkdir -p tok
	cat $< | ${TOKENIZER_EN} 2>$*.tok.en.err | ${SENTENCESP_EN} > $@ 2>$*.stc.en.err
	-rm *.en.err

tok/%.tok.tr: txt/%.txt.tr
	mkdir -p tok
	cat $< | ${TOKENIZER_TR} 2>$*.tok.en.err | ${SENTENCESP_TR} > $@ 2>$*.stc.tr.err
	-rm *.tr.err

%.aln.tgz: %.tok.tgz
	tar xzf $<
	cp Makefile $*
	cd $*;make batch
	tar czf $@ $*/aln
	rm -rf $*

batch:
	mkdir -p aln	
	ls tok | perl -lane 'my $$t = join("\n",@F);print "$$t";' > aln/batch.tmp
	cat aln/batch.tmp | perl -lane 'if($$_ =~ /(.*?)\.tok.en$$/){ print "tok/$$1.tok.tr\ttok/$$1.tok.en\taln/$$1.aln";}' > aln/batch
	rm aln/batch.tmp
	-${ALIGN} -batch aln/batch >align.out 2>align.err
	-rm aling.out align.err aln/batch

# Print the concatenated alignment file for each language separately
# Remove <P> and the alignmens with <ALIGNTHR scores and empty lines.
# Multiple lines seen more than THR are only printed THR times
anadolu.aln: anadolu.aln.tgz
	tar xzf $<
	cat anadolu/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > anadolu.aln
	${FILTER} anadolu.aln 0.8 anadolu
	paste anadolu.tr anadolu.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > anadolu.tr.gz
	paste anadolu.tr anadolu.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > anadolu.en.gz
	rm -rf anadolu anodulu.tr anadolu.en

marmara.aln: marmara.aln.tgz
	tar xzf $<
	cat marmara/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > marmara.aln
	${FILTER} marmara.aln 0.8 marmara
	paste marmara.tr marmara.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > marmara.tr.gz
	paste marmara.tr marmara.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > marmara.en.gz
	rm -rf marmara marmara.tr marmara.en

bilgi.aln: bilgi.aln.tgz
	tar xzf $<
	cat bilgi/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > bilgi.aln
	${FILTER} bilgi.aln 1 bilgi
	paste bilgi.tr bilgi.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > bilgi.tr.gz
	paste bilgi.tr bilgi.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > bilgi.en.gz
	rm -rf bilgi bilgi.tr bilgi.en 

sabanci.aln: sabanci.aln.tgz
	tar xzf $<
	cat sabanci/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > sabanci.aln
	${FILTER} sabanci.aln 0.5 sabanci
	paste sabanci.tr sabanci.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > sabanci.tr.gz
	paste sabanci.tr sabanci.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > sabanci.en.gz
	rm -rf sabanci sabanci.tr sabanci.en 

ieu.aln: ieu.aln.tgz
	tar xzf $<
	cat ieu/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > ieu.aln
	${FILTER} ieu.aln 0.6 ieu
	paste ieu.tr ieu.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > ieu.tr.gz
	paste ieu.tr ieu.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > ieu.en.gz
	rm -rf ieu ieu.tr ieu.en 

koc.aln: koc.aln.tgz
	tar xzf $<
	cat koc/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > koc.aln
	${FILTER} koc.aln 0.7 koc
	paste koc.tr koc.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > koc.tr.gz
	paste koc.tr koc.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > koc.en.gz
	rm -rf koc koc.tr koc.en 

osmangazi.aln: osmangazi.aln.tgz #DONOT USE THIS DATA	
	echo "Do not use this data"
	tar xzf $<
	cat osmangazi/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > osmangazi.aln
	${FILTER} osmangazi.aln 1.7 osmangazi
	paste osmangazi.tr osmangazi.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > osmangazi.tr.gz
	paste osmangazi.tr osmangazi.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > osmangazi.en.gz
	rm -rf osmangazi osmangazi.tr osmangazi.en 

itu.aln: itu.aln.tgz
	tar xzf $<
	cat itu/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > itu.aln
	${FILTER} itu.aln 1.1 itu
	paste itu.tr itu.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > itu.tr.gz
	paste itu.tr itu.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > itu.en.gz
	rm -rf itu itu.tr itu.en 

setimes.aln: setimes.aln.tgz
	tar xzf $<
	cat setimes/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > setimes.aln
	${FILTER} setimes.aln 0.9 setimes
	paste setimes.tr setimes.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > setimes.tr.gz
	paste setimes.tr setimes.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > setimes.en.gz
	rm -rf setimes setimes.tr setimes.en 

%.aln: %.aln.tgz
	tar xzf $<
	cat $*/aln/*.aln | perl -lane 'print if ($$_ !~ /<P>/ && $$F[-1] > 0 && $$_ !~ /^\t\t\d+/)' > $*.aln
	${FILTER} $*.aln 1.1 $*
	paste $*.tr $*.en | ${RCOUNT} | ${REMMULT} 10 |cut -f1 | gzip > $*.tr.gz
	paste $*.tr $*.en | ${RCOUNT} | ${REMMULT} 10 |cut -f2 | gzip > $*.en.gz
	rm -rf $* $*.tr $*.en 

### MAKEFILE MISC:
.PRECIOUS: %.tok.tgz %.txt.tgz %.aln.tgz %.html.tgz
